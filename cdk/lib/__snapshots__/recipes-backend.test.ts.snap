// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RecipesBackend stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuParameter",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuLambdaErrorPercentageAlarm",
      "GuApiLambda",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuScheduledLambda",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LambdarecipesbackendTESTEndpointFC1C435D": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "LambdarecipesbackendTEST4B1DC1BE",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "LambdarecipesbackendTESTDeploymentStageprodB9F3A129",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "TelemetryCrossAcctRole": {
      "Default": "/TEST/content-api/recipes-responder/telemetryXAR",
      "Description": "Cross-account role to allow data submissions",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "TelemetryTopic": {
      "Default": "/TEST/content-api/recipes-responder/telemetryTopic",
      "Description": "ARN of the SNS topic to use for data submissions",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "capiKey": {
      "Default": "/TEST/content-api/recipes-responder/capi-key",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "externalsnonurgentalarmarnParameter3CDDBCA7": {
      "Default": "/account/content-api-common/alarms/non-urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "externalsurgentalarmarnParameterCE71CB92": {
      "Default": "/account/content-api-common/alarms/urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "faciaPublishStatusSNSTopicParam": {
      "Default": "/TEST/content-api/recipes-responder/facia-status-sns-topic-arn",
      "Description": "The ARN of the facia-tool SNS topic that receives publication status messages",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "faciaPublishStatusSNSTopicRoleParam": {
      "Default": "/TEST/content-api/recipes-responder/facia-status-sns-topic-role-arn",
      "Description": "The ARN of role that permits us to write to faciaPublishStatusSNSTopic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "faciaSNSTopicParam": {
      "Default": "/TEST/content-api/recipes-responder/facia-sns-topic-arn",
      "Description": "The ARN of the facia-tool SNS topic that emits curation notifications",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "fastlyKey": {
      "Default": "/TEST/content-api/recipes-responder/fastly-key",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "reindexBatchSizeParam": {
      "Default": 100,
      "Description": "The size of the batches to write to the reindex stream",
      "Type": "Number",
    },
    "reindexWaitTimeParam": {
      "Default": 10,
      "Description": "The time to wait between sending batches of reindex messages",
      "Type": "Number",
    },
  },
  "Resources": {
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client("s3")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'
CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

def handler(event: dict, context):
  response_status = "SUCCESS"
  error_message = ""
  try:
    props = event["ResourceProperties"]
    notification_configuration = props["NotificationConfiguration"]
    managed = props.get('Managed', 'true').lower() == 'true'
    skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'
    stack_id = event['StackId']
    old = event.get("OldResourceProperties", {}).get("NotificationConfiguration", {})
    if managed:
      config = handle_managed(event["RequestType"], notification_configuration)
    else:
      config = handle_unmanaged(props["BucketName"], stack_id, event["RequestType"], notification_configuration, old)
    s3.put_bucket_notification_configuration(Bucket=props["BucketName"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)
  except Exception as e:
    logging.exception("Failed to put bucket notification configuration")
    response_status = "FAILED"
    error_message = f"Error: {str(e)}. "
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):
  def get_id(n):
    n['Id'] = ''
    sorted_notifications = sort_filter_rules(n)
    strToHash=json.dumps(sorted_notifications, sort_keys=True).replace('"Name": "prefix"', '"Name": "Prefix"').replace('"Name": "suffix"', '"Name": "Suffix"')
    return f"{stack_id}-{hash(strToHash)}"
  def with_id(n):
    n['Id'] = get_id(n)
    return n

  external_notifications = {}
  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)
  for t in CONFIGURATION_TYPES:
    if request_type == 'Update':
        old_incoming_ids = [get_id(n) for n in old.get(t, [])]
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      
    elif request_type == 'Delete':
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]
    elif request_type == 'Create':
        external_notifications[t] = [n for n in existing_notifications.get(t, [])]
  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  if request_type == 'Delete':
    return external_notifications

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      "Status": response_status,
      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
      "StackId": event["StackId"],
      "RequestId": event["RequestId"],
      "LogicalResourceId": event["LogicalResourceId"],
      "NoEcho": False,
    }
  ).encode("utf-8")
  headers = {"content-type": "", "content-length": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode("utf-8"))
    print("Status code: " + response.reason)
  except Exception as e:
      print("send(..) failed executing request.urlopen(..): " + str(e))

def sort_filter_rules(json_obj):
  if not isinstance(json_obj, dict):
      return json_obj
  for key, value in json_obj.items():
      if isinstance(value, dict):
          json_obj[key] = sort_filter_rules(value)
      elif isinstance(value, list):
          json_obj[key] = [sort_filter_rules(item) for item in value]
  if "Filter" in json_obj and "Key" in json_obj["Filter"] and "FilterRules" in json_obj["Filter"]["Key"]:
      filter_rules = json_obj["Filter"]["Key"]["FilterRules"]
      sorted_filter_rules = sorted(filter_rules, key=lambda x: x["Name"])
      json_obj["Filter"]["Key"]["FilterRules"] = sorted_filter_rules
  return json_obj",
        },
        "Description": "AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrierConnectionAllowEventRuleRecipesBackendupdaterLambda0796CBC53405D228": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updaterLambdaE2EB52D9",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CrierConnectionE7D24320",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CrierConnectionE7D24320": {
      "Properties": {
        "Description": "Connect recipe responder TEST to Crier",
        "EventBusName": "crier-eventbus-content-api-crier-v2-TEST",
        "EventPattern": {
          "detail": {
            "channels": [
              "feast",
            ],
          },
          "source": [
            "crier",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "updaterLambdaE2EB52D9",
                "Arn",
              ],
            },
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "RecipeResponderDLQ4E2B8219",
                  "Arn",
                ],
              },
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 1800,
              "MaximumRetryAttempts": 5,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DurationRuntimeAlarmC21C10E0": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "externalsnonurgentalarmarnParameter3CDDBCA7",
          },
        ],
        "AlarmDescription": "Recipe backend ingest lambda at 75% of allowed duration",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "updaterLambdaE2EB52D9",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda",
        "Period": 180,
        "Statistic": "Maximum",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 22500,
        "TreatMissingData": "ignore",
        "Unit": "Milliseconds",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "LambdaD247545B": {
      "DependsOn": [
        "LambdaServiceRoleDefaultPolicyDAE46E21",
        "LambdaServiceRoleA8ED4D3B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-backend-rest-endpoints/rest-endpoints.zip",
        },
        "Description": "REST API endpoints for the recipe backend",
        "Environment": {
          "Variables": {
            "APP": "recipes-backend-rest-endpoints",
            "CONTENT_URL_BASE": "recipes.guardianapis.com",
            "FASTLY_API_KEY": {
              "Ref": "fastlyKey",
            },
            "INDEX_TABLE": {
              "Ref": "storeRecipeTableC3AD84B7",
            },
            "STACK": "content-api",
            "STAGE": "TEST",
            "STATIC_BUCKET": {
              "Ref": "staticstaticServing53194089",
            },
          },
        },
        "FunctionName": "recipes-backend-rest-endpoints-TEST",
        "Handler": "main.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "LambdaServiceRoleA8ED4D3B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaServiceRoleA8ED4D3B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaServiceRoleDefaultPolicyDAE46E21": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:Query",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "storeRecipeTableC3AD84B7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "storeRecipeTableC3AD84B7",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-backend-rest-endpoints/rest-endpoints.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-backend-rest-endpoints",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-backend-rest-endpoints/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaServiceRoleDefaultPolicyDAE46E21",
        "Roles": [
          {
            "Ref": "LambdaServiceRoleA8ED4D3B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdarecipesbackendTEST4B1DC1BE": {
      "Properties": {
        "ApiKeySourceType": "HEADER",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "Name": "content-api-TEST-recipes-backend-TEST",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "LambdarecipesbackendTESTANY6672F729": {
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaD247545B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "LambdarecipesbackendTEST4B1DC1BE",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "LambdarecipesbackendTEST4B1DC1BE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdarecipesbackendTESTANYApiPermissionRecipesBackendLambdarecipesbackendTEST4DC0CA32ANY04EC2491": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "LambdarecipesbackendTEST4B1DC1BE",
              },
              "/",
              {
                "Ref": "LambdarecipesbackendTESTDeploymentStageprodB9F3A129",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdarecipesbackendTESTANYApiPermissionTestRecipesBackendLambdarecipesbackendTEST4DC0CA32ANY35ECC907": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "LambdarecipesbackendTEST4B1DC1BE",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdarecipesbackendTESTAccount7462C531": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "LambdarecipesbackendTEST4B1DC1BE",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "LambdarecipesbackendTESTCloudWatchRoleFC1D32BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdarecipesbackendTESTCloudWatchRoleFC1D32BF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdarecipesbackendTESTDeploymentE6FBC51Cfc12f3dde865798df25646d21b1ca842": {
      "DependsOn": [
        "LambdarecipesbackendTESTproxyANYB2172EAF",
        "LambdarecipesbackendTESTproxyE7B5C009",
        "LambdarecipesbackendTESTANY6672F729",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "LambdarecipesbackendTEST4B1DC1BE",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "LambdarecipesbackendTESTDeploymentStageprodB9F3A129": {
      "DependsOn": [
        "LambdarecipesbackendTESTAccount7462C531",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "LambdarecipesbackendTESTDeploymentE6FBC51Cfc12f3dde865798df25646d21b1ca842",
        },
        "RestApiId": {
          "Ref": "LambdarecipesbackendTEST4B1DC1BE",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LambdarecipesbackendTESTUsagePlan03DEBC29": {
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "LambdarecipesbackendTEST4B1DC1BE",
            },
            "Stage": {
              "Ref": "LambdarecipesbackendTESTDeploymentStageprodB9F3A129",
            },
            "Throttle": {},
          },
        ],
        "Description": "REST endpoints for recipes backend",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-rest-endpoints",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "UsagePlanName": "recipes-backend-TEST",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "LambdarecipesbackendTESTproxyANYApiPermissionRecipesBackendLambdarecipesbackendTEST4DC0CA32ANYproxy3380861A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "LambdarecipesbackendTEST4B1DC1BE",
              },
              "/",
              {
                "Ref": "LambdarecipesbackendTESTDeploymentStageprodB9F3A129",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdarecipesbackendTESTproxyANYApiPermissionTestRecipesBackendLambdarecipesbackendTEST4DC0CA32ANYproxy9D7DF76E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaD247545B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "LambdarecipesbackendTEST4B1DC1BE",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdarecipesbackendTESTproxyANYB2172EAF": {
      "Properties": {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaD247545B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "LambdarecipesbackendTESTproxyE7B5C009",
        },
        "RestApiId": {
          "Ref": "LambdarecipesbackendTEST4B1DC1BE",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdarecipesbackendTESTproxyE7B5C009": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "LambdarecipesbackendTEST4B1DC1BE",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "LambdarecipesbackendTEST4B1DC1BE",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PublishTodaysCuration6EFD9033": {
      "DependsOn": [
        "PublishTodaysCurationServiceRoleDefaultPolicy2854E18F",
        "PublishTodaysCurationServiceRoleBDC7AE8F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-publish-todays-curation/publish-todays-curation.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "recipes-publish-todays-curation",
            "CONTENT_URL_BASE": "recipes.guardianapis.com",
            "FASTLY_API_KEY": {
              "Ref": "fastlyKey",
            },
            "STACK": "content-api",
            "STAGE": "TEST",
            "STATIC_BUCKET": {
              "Ref": "staticstaticServing53194089",
            },
          },
        },
        "FunctionName": "PublishTodaysCuration-TEST",
        "Handler": "main.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "PublishTodaysCurationServiceRoleBDC7AE8F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-publish-todays-curation",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "PublishTodaysCurationPublishTodaysCurationcron10068F6AC9B": {
      "Properties": {
        "Description": "Update Feast app daily curation at midnight",
        "ScheduleExpression": "cron(1 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "PublishTodaysCuration6EFD9033",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "PublishTodaysCurationPublishTodaysCurationcron100AllowEventRuleRecipesBackendPublishTodaysCuration6CDA0896A0786549": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PublishTodaysCuration6EFD9033",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "PublishTodaysCurationPublishTodaysCurationcron10068F6AC9B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PublishTodaysCurationServiceRoleBDC7AE8F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-publish-todays-curation",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PublishTodaysCurationServiceRoleDefaultPolicy2854E18F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Effect": "Deny",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/content/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "staticstaticServing53194089",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-publish-todays-curation/publish-todays-curation.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-publish-todays-curation",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-publish-todays-curation/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PublishTodaysCurationServiceRoleDefaultPolicy2854E18F",
        "Roles": [
          {
            "Ref": "PublishTodaysCurationServiceRoleBDC7AE8F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RecipeReindexReindexingStateMachine721AD70A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RecipeReindexReindexingStateMachineRoleDefaultPolicy5971BC81",
        "RecipeReindexReindexingStateMachineRoleD7C6E562",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"storeDryRun","States":{"storeDryRun":{"Next":"checkForOtherRunningTasks","Type":"Pass","Assign":{"dryRun.$":"$.dryRun"}},"checkForOtherRunningTasks":{"Next":"IsOnlyRunningReindex","Type":"Task","Parameters":{"StatusFilter":"RUNNING","StateMachineArn.$":"$$.StateMachine.Id"},"Resource":"arn:aws:states:::aws-sdk:sfn:listExecutions"},"IsOnlyRunningReindex":{"Type":"Choice","Choices":[{"Variable":"$.Executions[1]","IsPresent":false,"Next":"SnapshotOrderedIndexTask"}],"Default":"Fail"},"Fail":{"Type":"Fail","Error":"ReindexingError","Cause":"Other reindexes running"},"SnapshotOrderedIndexTask":{"Next":"WriteBatchToReindexQueueTask","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "SnapshotRecipeIndexLambdaA94048E1",
                  "Arn",
                ],
              },
              "","Payload":{"executionId.$":"$$.Execution.Name"}}},"WriteBatchToReindexQueueTask":{"Next":"IsReindexComplete","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","InputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "WriteBatchToReindexQueueLambdaA86F9553",
                  "Arn",
                ],
              },
              "","Payload":{"input.$":"$","dryRun.$":"$dryRun"}}},"WaitForThroughPut":{"Type":"Wait","Seconds":",
              {
                "Ref": "reindexWaitTimeParam",
              },
              ","Next":"WriteBatchToReindexQueueTask"},"IsReindexComplete":{"Type":"Choice","Choices":[{"Variable":"$.Payload.nextIndex","NumericGreaterThanPath":"$.Payload.lastIndex","Next":"Reindex complete"}],"Default":"WaitForThroughPut"},"Reindex complete":{"Type":"Succeed"}},"TimeoutSeconds":900}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RecipeReindexReindexingStateMachineRoleD7C6E562",
            "Arn",
          ],
        },
        "StateMachineName": "recipes-reindex-TEST-reindex-recipes",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RecipeReindexReindexingStateMachineRoleD7C6E562": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RecipeReindexReindexingStateMachineRoleDefaultPolicy5971BC81": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SnapshotRecipeIndexLambdaA94048E1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SnapshotRecipeIndexLambdaA94048E1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WriteBatchToReindexQueueLambdaA86F9553",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WriteBatchToReindexQueueLambdaA86F9553",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:ListExecutions",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:states:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stateMachine:recipes-reindex-TEST-reindex-recipes",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RecipeReindexReindexingStateMachineRoleDefaultPolicy5971BC81",
        "Roles": [
          {
            "Ref": "RecipeReindexReindexingStateMachineRoleD7C6E562",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RecipeReindexreindexSnapshotBucketB9E1DA96": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "recipes-backend-reindex-snapshots-test",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RecipeReindexreindexSnapshotBucketPolicyD598A49A": {
      "Properties": {
        "Bucket": {
          "Ref": "RecipeReindexreindexSnapshotBucketB9E1DA96",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RecipeReindexreindexSnapshotBucketB9E1DA96",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RecipeReindexreindexSnapshotBucketB9E1DA96",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RecipeResponderDLQ4E2B8219": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "recipe-responder-TEST-DLQ",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "RecipeResponderDLQPolicy20D599C4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "CrierConnectionE7D24320",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RecipeResponderDLQ4E2B8219",
                  "Arn",
                ],
              },
              "Sid": "AllowEventRuleRecipesBackendCrierConnection45DBF5AE",
            },
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "ReindexConnection1CF3117C",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RecipeResponderDLQ4E2B8219",
                  "Arn",
                ],
              },
              "Sid": "AllowEventRuleRecipesBackendReindexConnection8B49D5D3",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "RecipeResponderDLQ4E2B8219",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "RecipesFaciaConnection04952500": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "RecipesFaciaDLQA0FC5B46",
              "Arn",
            ],
          },
          "maxReceiveCount": 1,
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "RecipesFaciaConnectionPolicyC7CB124D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RecipesFaciaConnection04952500",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "faciaSNSTopicParam",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RecipesFaciaConnection04952500",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "RecipesFaciaConnection04952500",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "RecipesFaciaConnectionRecipesBackendRecipesFaciafaciaPublishSNSTopicA854730B0579B71E": {
      "DependsOn": [
        "RecipesFaciaConnectionPolicyC7CB124D",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "RecipesFaciaConnection04952500",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "Region": {
          "Fn::Select": [
            3,
            {
              "Fn::Split": [
                ":",
                {
                  "Ref": "faciaSNSTopicParam",
                },
              ],
            },
          ],
        },
        "TopicArn": {
          "Ref": "faciaSNSTopicParam",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "RecipesFaciaDLQA0FC5B46": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "RecipesFaciaResponder7D165FDE": {
      "DependsOn": [
        "RecipesFaciaResponderServiceRoleDefaultPolicy52509CF7",
        "RecipesFaciaResponderServiceRoleC9B4A218",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-facia-responder/facia-responder.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "recipes-facia-responder",
            "CONTENT_URL_BASE": "recipes.guardianapis.com",
            "FACIA_PUBLISH_STATUS_ROLE_ARN": {
              "Ref": "faciaPublishStatusSNSTopicRoleParam",
            },
            "FACIA_PUBLISH_STATUS_TOPIC_ARN": {
              "Ref": "faciaPublishStatusSNSTopicParam",
            },
            "FASTLY_API_KEY": {
              "Ref": "fastlyKey",
            },
            "STACK": "content-api",
            "STAGE": "TEST",
            "STATIC_BUCKET": {
              "Ref": "staticstaticServing53194089",
            },
          },
        },
        "FunctionName": "RecipesFaciaResponder-TEST",
        "Handler": "main.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "RecipesFaciaResponderServiceRoleC9B4A218",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-facia-responder",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RecipesFaciaResponderErrorPercentageAlarmForLambda23FFF23F": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "externalsnonurgentalarmarnParameter3CDDBCA7",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "RecipesFaciaResponder7D165FDE",
              },
              " exceeded 1% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error percentage from ",
              {
                "Ref": "RecipesFaciaResponder7D165FDE",
              },
              " lambda in TEST",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "RecipesFaciaResponder7D165FDE",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "RecipesFaciaResponder7D165FDE",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "RecipesFaciaResponder7D165FDE",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "RecipesFaciaResponderServiceRoleC9B4A218": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-facia-responder",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RecipesFaciaResponderServiceRoleDefaultPolicy52509CF7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticstaticServing53194089",
                          "Arn",
                        ],
                      },
                      "/content/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticstaticServing53194089",
                          "Arn",
                        ],
                      },
                      "/index.json",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:ListObjects",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Ref": "faciaPublishStatusSNSTopicRoleParam",
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RecipesFaciaConnection04952500",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-facia-responder/facia-responder.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-facia-responder",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-facia-responder/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RecipesFaciaResponderServiceRoleDefaultPolicy52509CF7",
        "Roles": [
          {
            "Ref": "RecipesFaciaResponderServiceRoleC9B4A218",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RecipesFaciaResponderSqsEventSourceRecipesBackendRecipesFaciaConnectionBAC3F444088F8F39": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "RecipesFaciaConnection04952500",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "RecipesFaciaResponder7D165FDE",
        },
        "ScalingConfig": {
          "MaximumConcurrency": 5,
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-facia-responder",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "ReindexConnection1CF3117C": {
      "Properties": {
        "Description": "Connect recipe responder TEST to recipes-reindex",
        "EventBusName": "crier-eventbus-content-api-crier-v2-TEST",
        "EventPattern": {
          "source": [
            "recipes-reindex",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "updaterLambdaE2EB52D9",
                "Arn",
              ],
            },
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "RecipeResponderDLQ4E2B8219",
                  "Arn",
                ],
              },
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 1800,
              "MaximumRetryAttempts": 5,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ReindexConnectionAllowEventRuleRecipesBackendupdaterLambda0796CBC5D1F721BF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updaterLambdaE2EB52D9",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ReindexConnection1CF3117C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SnapshotRecipeIndexLambdaA94048E1": {
      "DependsOn": [
        "SnapshotRecipeIndexLambdaServiceRoleDefaultPolicy189EC0D5",
        "SnapshotRecipeIndexLambdaServiceRole0F4E40F2",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-reindex-snapshot-recipe-index/recipes-reindex.zip",
        },
        "Description": "Store a snapshot of the current recipe index in S3",
        "Environment": {
          "Variables": {
            "APP": "recipes-reindex-snapshot-recipe-index",
            "CONTENT_URL_BASE": "recipes.guardianapis.com",
            "INDEX_TABLE": {
              "Ref": "storeRecipeTableC3AD84B7",
            },
            "LAST_UPDATED_INDEX": "idxArticleLastUpdated",
            "RECIPE_INDEX_SNAPSHOT_BUCKET": {
              "Ref": "RecipeReindexreindexSnapshotBucketB9E1DA96",
            },
            "STACK": "content-api",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "recipes-reindex-snapshot-recipe-index-TEST",
        "Handler": "main.snapshotRecipeIndexHandler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "SnapshotRecipeIndexLambdaServiceRole0F4E40F2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-reindex-snapshot-recipe-index",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SnapshotRecipeIndexLambdaServiceRole0F4E40F2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-reindex-snapshot-recipe-index",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SnapshotRecipeIndexLambdaServiceRoleDefaultPolicy189EC0D5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "RecipeReindexreindexSnapshotBucketB9E1DA96",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:Scan",
                "dynamodb:Query",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "storeRecipeTableC3AD84B7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "storeRecipeTableC3AD84B7",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-reindex-snapshot-recipe-index/recipes-reindex.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-reindex-snapshot-recipe-index",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-reindex-snapshot-recipe-index/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SnapshotRecipeIndexLambdaServiceRoleDefaultPolicy189EC0D5",
        "Roles": [
          {
            "Ref": "SnapshotRecipeIndexLambdaServiceRole0F4E40F2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WriteBatchToReindexQueueLambdaA86F9553": {
      "DependsOn": [
        "WriteBatchToReindexQueueLambdaServiceRoleDefaultPolicyFE28D3C1",
        "WriteBatchToReindexQueueLambdaServiceRole4B52EB2F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-reindex-write-batch-to-index-queue/recipes-reindex.zip",
        },
        "Description": "Write a batch of recipe ids to the reindex queue",
        "Environment": {
          "Variables": {
            "APP": "recipes-reindex-write-batch-to-index-queue",
            "OUTGOING_EVENT_BUS": "crier-eventbus-content-api-crier-v2-TEST",
            "RECIPE_INDEX_SNAPSHOT_BUCKET": {
              "Ref": "RecipeReindexreindexSnapshotBucketB9E1DA96",
            },
            "REINDEX_BATCH_SIZE": {
              "Ref": "reindexBatchSizeParam",
            },
            "STACK": "content-api",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "recipes-reindex-write-batch-to-reindex-queue-TEST",
        "Handler": "main.writeBatchToReindexQueueHandler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "WriteBatchToReindexQueueLambdaServiceRole4B52EB2F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-reindex-write-batch-to-index-queue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WriteBatchToReindexQueueLambdaServiceRole4B52EB2F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-reindex-write-batch-to-index-queue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WriteBatchToReindexQueueLambdaServiceRoleDefaultPolicyFE28D3C1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "RecipeReindexreindexSnapshotBucketB9E1DA96",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":event-bus/crier-eventbus-content-api-crier-v2-TEST",
                  ],
                ],
              },
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-reindex-write-batch-to-index-queue/recipes-reindex.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-reindex-write-batch-to-index-queue",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-reindex-write-batch-to-index-queue/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WriteBatchToReindexQueueLambdaServiceRoleDefaultPolicyFE28D3C1",
        "Roles": [
          {
            "Ref": "WriteBatchToReindexQueueLambdaServiceRole4B52EB2F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "staticcdnRead42C381A5": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "UserName": "recipes-api-cdn-TEST",
      },
      "Type": "AWS::IAM::User",
    },
    "staticcdnReadDefaultPolicy5DF868F9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "staticcdnReadDefaultPolicy5DF868F9",
        "Users": [
          {
            "Ref": "staticcdnRead42C381A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "staticstaticServing53194089": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "recipes-backend-static-test",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "staticstaticServingAllowBucketNotificationsToRecipesBackendPublishTodaysCuration6CDA0896F3EBC5C1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PublishTodaysCuration6EFD9033",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "staticstaticServing53194089",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "staticstaticServingNotifications4994CB54": {
      "DependsOn": [
        "staticstaticServingAllowBucketNotificationsToRecipesBackendPublishTodaysCuration6CDA0896F3EBC5C1",
        "staticstaticServingPolicyC6F5921B",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "staticstaticServing53194089",
        },
        "Managed": true,
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": "curation.json",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "PublishTodaysCuration6EFD9033",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
        "SkipDestinationValidation": false,
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "staticstaticServingPolicyC6F5921B": {
      "Properties": {
        "Bucket": {
          "Ref": "staticstaticServing53194089",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staticstaticServing53194089",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticstaticServing53194089",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "storeRecipeTableC3AD84B7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "capiArticleId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "recipeUID",
            "AttributeType": "S",
          },
          {
            "AttributeName": "lastUpdated",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "idxArticleLastUpdated",
            "KeySchema": [
              {
                "AttributeName": "capiArticleId",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "lastUpdated",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
          {
            "IndexName": "idxRecipeUID",
            "KeySchema": [
              {
                "AttributeName": "recipeUID",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "NonKeyAttributes": [
                "recipeVersion",
              ],
              "ProjectionType": "INCLUDE",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "capiArticleId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "recipeUID",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "TableName": "recipes-backend-indexstore-TEST",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "testIndexLambda2BDF8073": {
      "DependsOn": [
        "testIndexLambdaServiceRoleDefaultPolicyD508FE80",
        "testIndexLambdaServiceRole56B9AD34",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-backend-testindex/test-indexbuild-lambda.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "recipes-backend-testindex",
            "INDEX_TABLE": {
              "Ref": "storeRecipeTableC3AD84B7",
            },
            "LAST_UPDATED_INDEX": "idxArticleLastUpdated",
            "STACK": "content-api",
            "STAGE": "TEST",
            "STATIC_BUCKET": {
              "Ref": "staticstaticServing53194089",
            },
          },
        },
        "Handler": "main.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "testIndexLambdaServiceRole56B9AD34",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-testindex",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testIndexLambdaServiceRole56B9AD34": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-backend-testindex",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testIndexLambdaServiceRoleDefaultPolicyD508FE80": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:Scan",
                "dynamodb:Query",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "storeRecipeTableC3AD84B7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "storeRecipeTableC3AD84B7",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-backend-testindex/test-indexbuild-lambda.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-backend-testindex",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-backend-testindex/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testIndexLambdaServiceRoleDefaultPolicyD508FE80",
        "Roles": [
          {
            "Ref": "testIndexLambdaServiceRole56B9AD34",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "updaterLambdaE2EB52D9": {
      "DependsOn": [
        "updaterLambdaServiceRoleDefaultPolicy290C193D",
        "updaterLambdaServiceRole83C687C0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "content-api/TEST/recipes-responder/recipes-responder.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "recipes-responder",
            "CAPI_BASE_URL": "https://content.code.dev-guardianapis.com",
            "CAPI_KEY": {
              "Ref": "capiKey",
            },
            "CONTENT_URL_BASE": "recipes.guardianapis.com",
            "DEBUG_LOGS": "true",
            "FASTLY_API_KEY": {
              "Ref": "fastlyKey",
            },
            "INDEX_TABLE": {
              "Ref": "storeRecipeTableC3AD84B7",
            },
            "LAST_UPDATED_INDEX": "idxArticleLastUpdated",
            "OUTGOING_EVENT_BUS": "crier-eventbus-content-api-crier-v2-TEST",
            "STACK": "content-api",
            "STAGE": "TEST",
            "STATIC_BUCKET": {
              "Ref": "staticstaticServing53194089",
            },
            "TELEMETRY_TOPIC": {
              "Ref": "TelemetryTopic",
            },
            "TELEMETRY_XAR": {
              "Ref": "TelemetryCrossAcctRole",
            },
          },
        },
        "FunctionName": "recipe-responder-content-api-TEST",
        "Handler": "main.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "updaterLambdaServiceRole83C687C0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-responder",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "updaterLambdaServiceRole83C687C0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "recipes-responder",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/recipes-backend",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "updaterLambdaServiceRoleDefaultPolicy290C193D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticstaticServing53194089",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:BatchWriteItem",
                "dynamodb:DeleteItem",
                "dynamodb:PutItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "storeRecipeTableC3AD84B7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "storeRecipeTableC3AD84B7",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TelemetryCrossAcctRole",
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":event-bus/crier-eventbus-content-api-crier-v2-TEST",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/content-api/TEST/recipes-responder/recipes-responder.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-responder",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/recipes-responder/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "updaterLambdaServiceRoleDefaultPolicy290C193D",
        "Roles": [
          {
            "Ref": "updaterLambdaServiceRole83C687C0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
